<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
     <property name="LOG_HOME" value="logs"/>

<!--     读取spring.application.name中的属性来生成日志文件名，需yml中定义 -->
    <springProperty scope="context" name="LOG_NAME" source="spring.application.name" defaultValue="xijia"/>
    <springProperty scope="context" name="LOG_HOME" source="logging.filePath" defaultValue="logs"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{50} - %msg%n</pattern><!--[%thread]-->
        </encoder>
    </appender>

    <!-- info 日志,按照每天生成日志文件 -->
<!--    <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash;日志文件输出的文件名, 路径+服务名&ndash;&gt;-->
<!--            <FileNamePattern>${LOG_HOME}/${LOG_NAME}/info/${LOG_NAME}.%d{yyyy-MM-dd}.log</FileNamePattern>-->
<!--            &lt;!&ndash;日志文件保留天数&ndash;&gt;-->
<!--            <MaxHistory>30</MaxHistory>-->
<!--        </rollingPolicy>-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            &lt;!&ndash;格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符&ndash;&gt;-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{50} - %msg%n</pattern>&lt;!&ndash;[%thread]&ndash;&gt;-->
<!--        </encoder>-->
<!--        &lt;!&ndash;日志文件最大的大小&ndash;&gt;-->
<!--        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
<!--            <MaxFileSize>10MB</MaxFileSize>-->
<!--        </triggeringPolicy>-->
<!--        &lt;!&ndash; 过滤日志,不打印错误日志 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>ERROR</level>             &lt;!&ndash; info 中不打印错误日志 &ndash;&gt;-->
<!--            <onMatch>DENY</onMatch>          &lt;!&ndash; 如果命中就禁止这条日志 &ndash;&gt;-->
<!--            <onMismatch>ACCEPT</onMismatch>  &lt;!&ndash; 如果没有命中就使用这条规则 &ndash;&gt;-->
<!--        </filter>-->
<!--    </appender>-->

    <!-- error日志 -->
<!--    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 过滤日志 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash;日志文件输出的文件名, 路径+服务名&ndash;&gt;-->
<!--            <FileNamePattern>${LOG_HOME}/${LOG_NAME}/error/${LOG_NAME}.%d{yyyy-MM-dd}.log</FileNamePattern>-->
<!--            &lt;!&ndash;日志文件保留天数&ndash;&gt;-->
<!--            <MaxHistory>30</MaxHistory>-->
<!--        </rollingPolicy>-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            &lt;!&ndash;格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符&ndash;&gt;-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{50} - %msg%n</pattern>&lt;!&ndash;[%thread]&ndash;&gt;-->
<!--        </encoder>-->
<!--        &lt;!&ndash;日志文件最大的大小&ndash;&gt;-->
<!--        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
<!--            <MaxFileSize>10MB</MaxFileSize>-->
<!--        </triggeringPolicy>-->
<!--        &lt;!&ndash; 过滤日志，只打印错误信息 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--            <level>ERROR</level>-->
<!--        </filter>-->
<!--    </appender>-->

    <!-- 拦截堆错误包 -->
<!--    <logger name="com.lplb" level="INFO"/>-->
<!--    <logger name="com.lplb" level="DEBUG"/>-->
<!--    <logger name="com.alibaba.nacos.client.config.impl.ClientWorker" level="ERROR"/>&lt;!&ndash;不打印INFO级别的日志&ndash;&gt;-->
<!--    <logger name="springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator" level="ERROR"/>-->
<!--    <logger name="de.codecentric.boot.admin.server.web.servlet.InstancesProxyController" level="ERROR"/>&lt;!&ndash; 屏蔽系统监控日志，太多,在每秒实现  &ndash;&gt;-->
<!--    <logger name="java.lang.NoClassDefFoundError" level="ERROR"/>&lt;!&ndash; 屏蔽动态添加java类的警告内容  &ndash;&gt;-->

    <!-- 解决SpringBootAdmin错误日志问题 -->
    <logger name="org.apache.catalina.connector.CoyoteAdapter" level="OFF"/>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>           <!--控制台输出-->
<!--        <appender-ref ref="FILE_INFO"/>        &lt;!&ndash;INFO 日志文件输出 &ndash;&gt;-->
<!--        <appender-ref ref="FILE_ERROR"/>       &lt;!&ndash;ERROR 日志文件输出 &ndash;&gt;-->
    </root>
</configuration>